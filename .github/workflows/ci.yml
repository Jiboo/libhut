name: libhut CI

on:
  workflow_dispatch
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    container: "ubuntu:22.04"
    steps:
      - name: update
        run: |
          apt update -yq
      - name: devenv
        run: |
          apt install -yq build-essential software-properties-common cmake clang-format clang-tidy gcc g++ git
      - name: builddeps
        run: |
          apt install -yq wayland-protocols glslang-tools libvulkan-dev libglm-dev libwayland-bin libwayland-dev libxkbcommon-dev libgtest-dev libharfbuzz-dev librenderdoc-dev
      - name: dumpenv
        run: |
          lsb_release -a
          ps -p$$ -ocmd=
          export
          git --version
          cmake --version
          make --version
          gcc --version
          g++ --version
          wayland-scanner --version
          glslangValidator --version
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: cmake
        run: |
          cmake -DCMAKE_BUILD_TYPE=Debug -DCMAKE_DISABLE_PRECOMPILE_HEADERS=ON -DHUT_CI=True .
      - name: build
        run: |
          cmake --build . --parallel
      - name: format
        run: |
          clang-format --version
          find ext inc src tst -name "*.cpp" -o -name "*.hpp"
          find ext inc src tst -name "*.cpp" -o -name "*.hpp" -print0 | xargs -0 clang-format --style=file --dry-run --Werror
      - name: tidy
        run: |
          clang-tidy --version
          find ext src tst -name "*.cpp"
          find ext src tst -name "*.cpp" -print0 | xargs -0 run-clang-tidy -p .
      - name: testdeps
        run: |
          apt install -yq vulkan-tools vulkan-validationlayers weston valgrind
          weston --version
          vulkaninfo
      - name: ctest
        run: |
          mkdir xdg_runtime_dir
          chmod 0700 xdg_runtime_dir
          export XDG_RUNTIME_DIR=xdg_runtime_dir
          export HUT_DISPLAY=headless
          weston --backend=headless-backend.so --socket=headless &
          sleep 10
          valgrind ./hut_unittests
